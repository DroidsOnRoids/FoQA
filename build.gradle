buildscript {
    ext.versions = [
            minSdk             : 15,
            compileSdk         : 29,
            targetSdk          : 29,
            kotlin             : '1.3.61',
            androidGradlePlugin: '4.0.0-alpha09',
            versionsPlugin     : '0.27.0',
            hyperion           : '0.9.27',
            debugDb            : '1.0.6',
            chucker            : '3.1.2',
            hyperionAppInfo    : '1.1.0',
            deviceNames        : '1.1.9',
            autoService        : '1.0-rc6',
            shipkit            : '2.3.0',
            detekt             : '1.4.0',
            androidxAnnotations: '1.1.0'
    ]

    repositories {
        google()
        mavenCentral()
        jcenter()
        gradlePluginPortal()
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$versions.androidGradlePlugin"
        classpath "com.github.ben-manes:gradle-versions-plugin:$versions.versionsPlugin"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        classpath "org.shipkit:shipkit:$versions.shipkit"
    }
}

plugins {
    id 'io.gitlab.arturbosch.detekt' version "1.1.0"
}

apply plugin: 'org.shipkit.java'

dependencies {
    detekt "io.gitlab.arturbosch.detekt:detekt-formatting:$versions.detekt"
    detekt "io.gitlab.arturbosch.detekt:detekt-cli:$versions.detekt"
}

repositories {
    mavenCentral()
    jcenter()
}

buildScan {
    termsOfServiceUrl = "https://gradle.com/terms-of-service"
    termsOfServiceAgree = "yes"
}

detekt {
    input = files(projectDir)
    config = rootProject.files("detekt-config.yml")
}

tasks.withType(io.gitlab.arturbosch.detekt.Detekt) {
    exclude("build/")
    exclude("buildSrc/build/")
    parallel = true
    reports {
        xml.enabled = true
        html.enabled = true
        txt.enabled = false
    }
}

subprojects { subproject ->

    repositories {
        google()
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
    }

    apply plugin: 'com.github.ben-manes.versions'
    group = 'pl.droidsonroids.foqa'

    if (subproject.name == 'sample') {
        return
    }

    apply plugin: 'com.android.library'
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-kapt'
    apply plugin: 'org.shipkit.bintray'

    apply plugin: 'org.shipkit.android-publish'

    android {
        compileSdkVersion versions.compileSdk

        defaultConfig {
            minSdkVersion versions.minSdk
            targetSdkVersion versions.targetSdk
        }

        resourcePrefix 'foqa_'

        variantFilter {
            if (it.name == "debug") {
                ignore = true
            }
        }
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
        implementation "com.willowtreeapps.hyperion:hyperion-plugin:$versions.hyperion"
        kapt "com.google.auto.service:auto-service:$versions.autoService"
    }
}
